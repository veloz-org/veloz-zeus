datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
    // relationMode = "prisma"
}

generator client {
    provider = "prisma-client-js"
}

enum Role {
    user
    admin
}

enum AuthMethod {
    credentials
    magicLink
    oauth
}

enum PlanType {
    one_time
    subscription
}

enum PlanDuration {
    monthly
    yearly
    weekly
    daily
    forever
}

model Users {
    id            String     @id @default(auto()) @map("_id") @db.ObjectId
    uId           String     @unique @default(cuid())
    username      String
    email         String     @unique
    avatar        String?
    auth_method   AuthMethod @default(credentials)
    provider      String?
    password_hash String?
    role          Role       @default(user)
    createdAt     DateTime   @default(now())

    tokens             RefreshToken[]
    pricing_plan       Plans[]
    plan_subscriptions PlanSubscriptions[]

    @@map(name: "users")
}

model RefreshToken {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    token     String   @unique
    userId    String
    createdAt DateTime @default(now())

    user Users @relation(fields: [userId], references: [uId])

    @@index([userId])
    @@map(name: "refresh_tokens")
}

model Plans {
    id          String       @id @default(auto()) @map("_id") @db.ObjectId
    planId      String       @unique @default(cuid())
    uId         String
    name        String       @unique
    description String
    price       Int
    currency    String
    type        PlanType     @default(subscription)
    features    String[]
    duration    PlanDuration @default(monthly)
    createdAt   DateTime     @default(now())

    user               Users               @relation(fields: [uId], references: [uId])
    plan_subscriptions PlanSubscriptions[]

    @@index([uId])
    @@map(name: "plans")
}

model PlanSubscriptions {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    uId         String
    planId      String
    plan_status String?  @default("active")
    createdAt   DateTime @default(now())

    user Users @relation(fields: [uId], references: [uId])
    plan Plans @relation(fields: [planId], references: [planId])

    @@index([uId])
    @@index([planId])
    @@map(name: "plan_subscriptions")
}
